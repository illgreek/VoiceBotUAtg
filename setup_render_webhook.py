#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –ø—ñ—Å–ª—è –¥–µ–ø–ª–æ—é –Ω–∞ Render
"""

import os
import requests
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

def setup_webhook():
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –¥–ª—è Telegram –±–æ—Ç–∞"""
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")
        print("–î–æ–¥–∞–π—Ç–µ BOT_TOKEN –≤ —Ñ–∞–π–ª .env")
        return False
    
    # –ó–∞–ø–∏—Ç—É—î–º–æ URL —Å–µ—Ä–≤—ñ—Å—É
    print("üåê –í–≤–µ–¥—ñ—Ç—å URL –≤–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É –Ω–∞ Render:")
    print("–ü—Ä–∏–∫–ª–∞–¥: https://voicebot-ua.onrender.com")
    webhook_url = input("URL: ").strip()
    
    if not webhook_url:
        print("‚ùå URL –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º!")
        return False
    
    # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω–∏–π URL –¥–ª—è webhook
    full_webhook_url = f"{webhook_url}/webhook"
    
    # URL –¥–ª—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook
    telegram_api_url = f"https://api.telegram.org/bot{bot_token}/setWebhook"
    
    try:
        # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ webhook
        response = requests.post(telegram_api_url, json={
            "url": full_webhook_url,
            "allowed_updates": ["message", "edited_message"]
        })
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å–ø—ñ—à–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
                print(f"üåê URL: {full_webhook_url}")
                print(f"üìä –°—Ç–∞—Ç—É—Å: {result.get('description', 'OK')}")
                return True
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è webhook: {result.get('description')}")
                return False
        else:
            print(f"‚ùå HTTP –ø–æ–º–∏–ª–∫–∞: {response.status_code}")
            print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def check_webhook():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ç–æ—á–Ω–æ–≥–æ webhook"""
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ webhook
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                webhook_info = result.get('result', {})
                
                print("üìä –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ webhook:")
                print(f"URL: {webhook_info.get('url', '–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')}")
                print(f"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–Ω–∏–π' if webhook_info.get('url') else '‚ùå –ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}")
                
                if webhook_info.get('last_error_date'):
                    print(f"–û—Å—Ç–∞–Ω–Ω—è –ø–æ–º–∏–ª–∫–∞: {webhook_info.get('last_error_message')}")
                
                return webhook_info.get('url') is not None
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó: {result.get('description')}")
                return False
        else:
            print(f"‚ùå HTTP –ø–æ–º–∏–ª–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def delete_webhook():
    """–í–∏–¥–∞–ª–µ–Ω–Ω—è webhook"""
    
    bot_token = os.getenv('BOT_TOKEN')
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return False
    
    try:
        # –í–∏–¥–∞–ª—è—î–º–æ webhook
        response = requests.post(f"https://api.telegram.org/bot{bot_token}/deleteWebhook")
        
        if response.status_code == 200:
            result = response.json()
            if result.get('ok'):
                print("‚úÖ Webhook —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ!")
                return True
            else:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è: {result.get('description')}")
                return False
        else:
            print(f"‚ùå HTTP –ø–æ–º–∏–ª–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    
    print("ü§ñ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è webhook –¥–ª—è Telegram –±–æ—Ç–∞")
    print("=" * 50)
    
    while True:
        print("\nüìã –í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:")
        print("1. –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ webhook")
        print("2. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ webhook")
        print("3. –í–∏–¥–∞–ª–∏—Ç–∏ webhook")
        print("4. –í–∏—Ö—ñ–¥")
        
        choice = input("\n–í–∞—à –≤–∏–±—ñ—Ä (1-4): ").strip()
        
        if choice == '1':
            setup_webhook()
        elif choice == '2':
            check_webhook()
        elif choice == '3':
            delete_webhook()
        elif choice == '4':
            print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break
        else:
            print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

if __name__ == '__main__':
    main() 